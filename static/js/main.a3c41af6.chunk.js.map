{"version":3,"sources":["queries/PEOPLE_PAGE.ts","state/reducers/peoplePageReducer.ts","state/reducers/modalReducer.ts","styled-components/person-card-div.ts","components/PersonCard.tsx","styled-components/spinner.ts","styled-components/centered-div.ts","styled-components/responsive-container.ts","styled-components/navigator.ts","styled-components/modal-background.ts","styled-components/modal-container.ts","components/PersonModal.tsx","pages/HomePage.tsx","App.tsx","reportWebVitals.ts","state/reducers/reducerIndex.ts","state/store.ts","index.tsx"],"names":["PEOPLE_PAGE","gql","_templateObject","Object","taggedTemplateLiteral","peoplePageSlice","createSlice","name","initialState","reducers","setPage","state","action","objectSpread","payload","actions","modalSlice","open","person","setOpen","setPerson","PersonCardDiv","styled","div","person_card_div_templateObject","PersonCard","_ref","dispatch","useDispatch","react_default","a","createElement","person_card_div","onClick","rotate360","keyframes","spinner_templateObject","Spinner","_templateObject2","CenteredDiv","centered_div_templateObject","Container","responsive_container_templateObject","Navigation","navigator_templateObject","ModalBackground","modal_background_templateObject","ModalContainer","modal_container_templateObject","PersonModal","useSelector","reducerIndex","modal","console","log","modal_background","modal_container","HomePage","_useState","useState","_useState2","slicedToArray","currentPage","setCurrentPage","_useQuery","useQuery","variables","pageId","loading","error","data","updatePage","direction","page","nextPage","currentState","previousPage","useEffect","peoplepage","centered_div","spinner","message","Fragment","components_PersonModal","responsive_container","undefined","people","map","index","components_PersonCard","styled_components_navigator","index_es","style","margin","cursor","size","icon","faArrowCircleLeft","faArrowCircleRight","App","pages_HomePage","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","combineReducers","modalReducer","peoplePageReducer","store","configureStore","reducer","client","ApolloClient","uri","cache","InMemoryCache","addTypename","ReactDOM","createRoot","document","getElementById","render","StrictMode","es","ApolloProvider","src_App"],"mappings":"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","file":"static/js/main.a3c41af6.chunk.js","sourcesContent":["import { gql } from \"@apollo/client\";\n\nexport const PEOPLE_PAGE = gql`\n  query GetPeoplePage($pageId: ID) {\n    peoplepage(pageId: $pageId) {\n      count\n      nextPage: next\n      previousPage: previous\n      people: results {\n        name\n        height\n        mass\n        gender\n        homeworld {\n          name\n        }\n      }\n    }\n  }\n`;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { PeoplePage } from \"../../types/types\";\n\nexport const peoplePageSlice = createSlice({\n  name: \"peoplePage\",\n  initialState: {} as PeoplePage,\n  reducers: {\n    setPage: (state, action) => {\n      return (state = { ...action.payload });\n    },\n  },\n});\n\nexport const { setPage } = peoplePageSlice.actions;\nexport default peoplePageSlice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { PeoplePage, Person } from \"../../types/types\";\n\nexport const modalSlice = createSlice({\n  name: \"modal\",\n  initialState: {\n    open: false,\n    // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n    person: <Person>{},\n  },\n  reducers: {\n    setOpen: (state) => {\n      state.open = !state.open;\n    },\n    setPerson: (state, action) => {\n      state.person = { ...action.payload };\n    },\n  },\n});\n\nexport const { setOpen } = modalSlice.actions;\nexport default modalSlice.reducer;\n","import styled from \"styled-components\";\n\nconst PersonCardDiv = styled.div`\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\n  border-radius: 5px;\n  padding: 5px 10px;\n  margin: 10px;\n  max-width: 250px;\n  height: 40px;\n  line-height: 40px;\n  width: 50%;\n  text-align: center;\n  transition: transform 0.2s;\n  transition: box-shadow 0.2s;\n  :hover {\n    transform: scale(1.05);\n    box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);\n    cursor: pointer;\n  }\n  @media (max-width: 768px) {\n    width: 95%;\n    max-width: none;\n  }\n`;\n\nexport default PersonCardDiv;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport modalReducer, { modalSlice } from \"../state/reducers/modalReducer\";\nimport PersonCardDiv from \"../styled-components/person-card-div\";\nimport { Person } from \"../types/types\";\n\ntype PersonCardProps = {\n  person: Person;\n};\n\nconst PersonCard = ({ person, person: { name } }: PersonCardProps) => {\n  const dispatch = useDispatch();\n  return (\n    <PersonCardDiv\n      onClick={() => {\n        dispatch(modalSlice.actions.setPerson(person));\n        dispatch(modalSlice.actions.setOpen());\n      }}\n    >\n      {name}\n    </PersonCardDiv>\n  );\n};\n\nexport default PersonCard;\n","import styled, { keyframes } from \"styled-components\";\n\nconst rotate360 = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`;\n\nconst Spinner = styled.div`\n  animation: ${rotate360} 1s linear infinite;\n  transform: translateZ(0);\n  \n  border-top: 2px solid grey;\n  border-right: 2px solid grey;\n  border-bottom: 2px solid grey;\n  border-left: 4px solid black;\n  background: transparent;\n  width: 24px;\n  height: 24px;\n  border-radius: 50%;\n`;\n\nexport default Spinner;","import styled from \"styled-components\";\n\nconst CenteredDiv = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n`;\n\nexport default CenteredDiv;\n","import styled from \"styled-components\";\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 70%;\n  margin: auto;\n  flex-wrap: wrap;\n  @media (max-width: 768px) {\n    flex-direction: column;\n    flex-wrap: nowrap;\n    align-items: center;\n    width: 90%;\n  }\n`;\n\nexport default Container;\n","import styled from \"styled-components\";\n\nconst Navigation = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n`;\n\nexport default Navigation;\n","import styled from \"styled-components\";\n\nconst ModalBackground = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(200, 200, 200);\n  position: fixed;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport default ModalBackground;\n","import styled from \"styled-components\";\n\nconst ModalContainer = styled.div`\n  width: 500px;\n  height: 500px;\n  border-radius: 12px;\n  background-color: white;\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n  display: flex;\n  flex-direction: column;\n  padding: 25px;\n`;\n\nexport default ModalContainer;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { modalSlice } from \"../state/reducers/modalReducer\";\nimport { RootState } from \"../state/store\";\nimport ModalBackground from \"../styled-components/modal-background\";\nimport ModalContainer from \"../styled-components/modal-container\";\n\nconst PersonModal = () => {\n  const state = useSelector((state: RootState) => state.reducerIndex.modal);\n  const dispatch = useDispatch();\n  console.log(\"person selected\", state.person.name);\n  return (\n    <ModalBackground>\n      <ModalContainer>\n        <button onClick={() => dispatch(modalSlice.actions.setOpen())}>\n          close\n        </button>\n        <p>{state.person.name}</p>\n      </ModalContainer>\n    </ModalBackground>\n  );\n};\n\nexport default PersonModal;\n","import React from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { Person } from \"../types/types\";\nimport { PEOPLE_PAGE } from \"../queries/PEOPLE_PAGE\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { peoplePageSlice } from \"../state/reducers/peoplePageReducer\";\nimport { RootState } from \"../state/store\";\nimport PersonCard from \"../components/PersonCard\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faArrowCircleLeft,\n  faArrowCircleRight,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport Spinner from \"../styled-components/spinner\";\nimport CenteredDiv from \"../styled-components/centered-div\";\nimport Container from \"../styled-components/responsive-container\";\nimport Navigation from \"../styled-components/navigator\";\nimport PersonModal from \"../components/PersonModal\";\n\nconst HomePage = () => {\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const state = useSelector((state: RootState) => state.reducerIndex);\n  const { loading, error, data } = useQuery(PEOPLE_PAGE, {\n    variables: { pageId: currentPage },\n  });\n  const dispatch = useDispatch();\n\n  const updatePage = (direction: string) => {\n    if (direction === \"next\") {\n      if (state.page.nextPage !== null) {\n        setCurrentPage((currentState) => currentState + 1);\n      }\n    } else {\n      if (state.page.previousPage !== null) {\n        setCurrentPage((currentState) => currentState - 1);\n      }\n    }\n  };\n\n  useEffect(() => {\n    console.log(\"Home page render\");\n    if (data) {\n      console.log(\"dispatch\", data.peoplepage);\n      dispatch(peoplePageSlice.actions.setPage(data.peoplepage));\n    }\n  }, [data, dispatch]);\n\n  if (loading)\n    return (\n      <CenteredDiv>\n        <Spinner />\n      </CenteredDiv>\n    );\n\n  if (error) return <p>`ERROR: ${error.message}`</p>;\n  return (\n    <>\n      {state.modal.open && <PersonModal />}\n      <Container>\n        {state.page.people !== undefined &&\n          state.page.people.map((person: Person, index: number) => {\n            return <PersonCard person={{ ...person }} />;\n          })}\n      </Container>\n      <Navigation>\n        {state.page.previousPage !== null && (\n          <FontAwesomeIcon\n            onClick={() => updatePage(\"previous\")}\n            style={{ margin: \"10px\", cursor: \"pointer\" }}\n            size=\"4x\"\n            icon={faArrowCircleLeft}\n          />\n        )}\n        <p>{currentPage}</p>\n        {state.page.nextPage !== null && (\n          <FontAwesomeIcon\n            onClick={() => updatePage(\"next\")}\n            style={{ margin: \"10px\", cursor: \"pointer\" }}\n            size=\"4x\"\n            icon={faArrowCircleRight}\n          />\n        )}\n      </Navigation>\n    </>\n  );\n};\nexport default HomePage;\n","import \"./App.css\";\nimport { Provider } from \"react-redux\";\nimport HomePage from \"./pages/HomePage\";\nimport React from \"react\";\n\nfunction App() {\n  return <HomePage />;\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","//This is the root reducer, it combines all other reducers into one for a single point of access\n\nimport { combineReducers } from \"redux\";\nimport modalReducer from \"./modalReducer\";\nimport peoplePageReducer from \"./peoplePageReducer\";\n\nexport default combineReducers({\n  modal: modalReducer,\n  page: peoplePageReducer,\n});\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport reducerIndex from \"./reducers/reducerIndex\";\n\nexport const store = configureStore({\n  reducer: {\n    reducerIndex,\n  },\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ApolloClient, ApolloProvider, InMemoryCache } from \"@apollo/client\";\nimport { store } from \"./state/store\";\nimport { Provider } from \"react-redux\";\n\nconst client = new ApolloClient({\n  uri: \"https://server-starwars.herokuapp.com/\",\n  cache: new InMemoryCache({\n    addTypename: false,\n  }),\n});\n\nconst root = ReactDOM.createRoot(\n  document.getElementById(\"root\") as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ApolloProvider client={client}>\n        <App />\n      </ApolloProvider>\n    </Provider>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}